/*
Given an array nums containing n + 1 integers where each integeris between 1 and n (inclusive),
prove that at least one duplicate number must exist.
Assume that there is only one duplicate number, find the duplicate one.

Example 1:
Input: [1,3,4,2,2]
Output: 2

Example 2:
Input: [3,1,3,4,2]
Output: 3

Note:
There is only one duplicate number in the array, but it could be repeated more than once.
*/

class Solution {
    public int findDuplicate(int[] nums) {
        int BIG = nums.length * 2;
        int DOUBLE_BIG = BIG * 2;

        for (int i = 0; i < nums.length; i++) {
            int number = nums[i] > BIG ? (nums[i] % BIG) : nums[i];
            nums[number] += BIG;

            if (nums[number] >= DOUBLE_BIG) {
                return number;
            }
        }
        return -1;
    }
}
