/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        StringBuilder result = new StringBuilder();
        
        int res1 = l1.val + l2.val;
        result.insert(0,(res1)%10);
        int mindSum = (res1)/10;
        
        while(l1.next != null && l2.next != null){
            l1 = l1.next;
            l2 = l2.next;
            int sum = l1.val + l2.val + mindSum;
            mindSum = sum > 9 ? 1 : 0;
            result.insert(0, sum % 10);
        }
        while (l2.next != null){
            l2 = l2.next;
            int sum = l2.val + mindSum;
            mindSum = sum > 9 ? 1 : 0;
            result.insert(0, sum % 10);
        }
        while (l1.next != null){
            l1 = l1.next;
            int sum = l1.val + mindSum;
            mindSum = sum > 9 ? 1 : 0;
            result.insert(0, sum % 10);
        }
        if(mindSum > 0){
            result.insert(0, 1);
        }
        
        int SIZE = result.length();
        ListNode[] list = new ListNode[SIZE];
        for(int i = 0; i < SIZE; i++){
                list[i] = new ListNode(result.charAt(SIZE-1-i)-48);
            }
        for(int i = 0; i < SIZE-1 ; i++){
                list[i].next = list[i+1];
            }
        return list[0];
    }
    
}
