/*
https://leetcode.com/problems/basic-calculator/description/
Implement a basic calculator to evaluate a simple expression string.

The expression string may contain open ( and closing parentheses ), the plus + or minus sign -, non-negative integers and empty spaces .

You may assume that the given expression is always valid.
*/

public class Solution {
    private static final Logger logger = LogManager.getLogger(Solution.class);

    public int calculate(String s) {
        int length = s.length();
        ArrayDeque<Integer> stack = new ArrayDeque<>();
        stack.push(0);
        for (int i = 0, sign = 1; i < length; i++) {
            if (Character.isDigit(s.charAt(i))) {
                int num = Integer.parseInt(String.valueOf(s.charAt(i)));
                for (; i < length - 1 && Character.isDigit(s.charAt(i + 1)); i++) {
                    num = num * 10 + Integer.parseInt(String.valueOf(s.charAt(i + 1)));
                }
                stack.push(stack.pop() + sign * num);
            } else if (s.charAt(i) == '+') {
                sign = 1;
            } else if (s.charAt(i) == '-') {
                sign = -1;
            } else if (s.charAt(i) == '(') {
                stack.push(sign);
                stack.push(0);
                sign = 1;
            } else if (s.charAt(i) == ')') {    // Update last sum = current sum * sign
                stack.push(stack.pop() * stack.pop() + stack.pop());
            }
        }
        return stack.pop();
    }
}
