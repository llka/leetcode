/*
https://leetcode.com/problems/bulb-switcher-ii/discuss/107269/Java-O(1)

There is a room with n lights which are turned on initially and 4 buttons on the wall. After performing exactly m unknown operations towards buttons, you need to return how many different kinds of status of the n lights could be.

Suppose n lights are labeled as number [1, 2, 3 ..., n], function of these 4 buttons are given below:

Flip all the lights.
Flip lights with even numbers.
Flip lights with odd numbers.
Flip lights with (3k + 1) numbers, k = 0, 1, 2, ...

Example 1:
Input: n = 1, m = 1.
Output: 2
Explanation: Status can be: [on], [off]

Example 2:
Input: n = 2, m = 1.
Output: 3
Explanation: Status can be: [on, off], [off, on], [off, off]

*/

public class Solution {

    public int flipLights(int n, int m) {
        if (n == 0) return 0;
        if (m == 0) return 1;
        if (n == 1) return 2;
        if (n == 2) {
            if (m == 1) return 3;
            else return 4;
        }
        if (n >= 3) {
            if (m == 1) return 4;
            if (m == 2) return 7;
            if (m >= 3) return 8;
        }
        return 8;
    }
}
