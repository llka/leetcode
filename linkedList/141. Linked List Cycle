/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public boolean hasCycle(ListNode head) {
        if (head != null && head.next != null && head.next.next != null) {
            ListNode oneStepIdx = head;
            ListNode twoStepIdx = head.next.next;

            while (oneStepIdx != null && twoStepIdx != null && twoStepIdx.next != null) {
                if (oneStepIdx == twoStepIdx) {
                    return true;
                }
                oneStepIdx = oneStepIdx.next;
                twoStepIdx = twoStepIdx.next.next;
            }
        }

        return false;
    }
}
